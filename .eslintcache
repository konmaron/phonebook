[{"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/index.js":"1","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/App.js":"2","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/header/Header.js":"3","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/contactList/ContactList.js":"4","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/addContact/AddContact.js":"5","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/detailedContact/DetailedContact.js":"6","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/contactForm/ContactForm.js":"7","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/services/storage.js":"8","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/editForm/EditForm.js":"9","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/services/api.js":"10","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/authorization/Authorization.js":"11","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/main/Main.js":"12","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/rootReducer.js":"13","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/headerReducer.js":"14","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/types.js":"15","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/actions.js":"16","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/authReducer.js":"17","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/loader/Loader.js":"18","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/contactListReducer.js":"19","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/context/AppContextProvider.js":"20","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/context/withAppContext.js":"21","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/context/AppContext.js":"22","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/contactHandlerReducer.js":"23"},{"size":627,"mtime":1610877434714,"results":"24","hashOfConfig":"25"},{"size":510,"mtime":1610877406285,"results":"26","hashOfConfig":"25"},{"size":1336,"mtime":1610877329843,"results":"27","hashOfConfig":"25"},{"size":2674,"mtime":1610878267861,"results":"28","hashOfConfig":"25"},{"size":3036,"mtime":1610877209651,"results":"29","hashOfConfig":"25"},{"size":2494,"mtime":1610878267858,"results":"30","hashOfConfig":"25"},{"size":3986,"mtime":1610877256877,"results":"31","hashOfConfig":"25"},{"size":306,"mtime":1610521328124,"results":"32","hashOfConfig":"25"},{"size":3961,"mtime":1609866932508,"results":"33","hashOfConfig":"25"},{"size":2634,"mtime":1610877396514,"results":"34","hashOfConfig":"25"},{"size":3214,"mtime":1610877209657,"results":"35","hashOfConfig":"25"},{"size":1041,"mtime":1610877348436,"results":"36","hashOfConfig":"25"},{"size":364,"mtime":1610877396501,"results":"37","hashOfConfig":"25"},{"size":323,"mtime":1610877396509,"results":"38","hashOfConfig":"25"},{"size":552,"mtime":1610876958675,"results":"39","hashOfConfig":"25"},{"size":3865,"mtime":1610878320679,"results":"40","hashOfConfig":"25"},{"size":443,"mtime":1610877396505,"results":"41","hashOfConfig":"25"},{"size":198,"mtime":1610794689992,"results":"42","hashOfConfig":"25"},{"size":270,"mtime":1610868158971,"results":"43","hashOfConfig":"25"},{"size":6251,"mtime":1610808035993,"results":"44","hashOfConfig":"25"},{"size":391,"mtime":1608312709260,"results":"45","hashOfConfig":"25"},{"size":75,"mtime":1608312537760,"results":"46","hashOfConfig":"25"},{"size":500,"mtime":1610878394781,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1qx166q",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/index.js",[],["101","102"],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/App.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/header/Header.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/contactList/ContactList.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/addContact/AddContact.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/detailedContact/DetailedContact.js",["103"],"import React from 'react'\n\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport * as Actions from '../../redux/actions';\n\nimport Loader from \"../loader/Loader\";\n\nimport classes from './DetailedContact.module.css';\n\nimport edit from \"./img/edit.png\";\nimport phone from \"./img/technology.png\"\nimport mail from \"./img/multimedia.png\"\nimport city from \"./img/buildings.png\"\nimport bin from './img/bin.svg';\n\nclass DetailedContact extends React.Component{\n    findById = (id) => this.props.contacts.find(contact => contact.id === id);\n\n    render() {\n        const cntc = this.findById(parseInt(this.props.match.params.id))\n        return (\n            <div id={this.props.match.params.id}>\n                <div className={classes.name}>\n                    <h2>{cntc.name} {cntc.lastName}</h2>\n                    <div className={classes['name-img']}>\n                        <Link to='/list'><img src={bin} alt='bin icon' onClick={() => this.props.removeContact(cntc, this.props)}/></Link>\n                        <Link\n                            to={`/addContact/${cntc.id}/${cntc.name}/${cntc.lastName}/${cntc.phone}/${cntc.email}/${cntc.address}/${cntc.description}`}>\n                            <img src={edit} alt='edit icon'/>\n                        </Link>\n                    </div>\n                </div>\n                <hr className={classes['hr-detailed']}/>\n                <div className={classes.data}>\n                    <img src={phone} alt='phone icon'/>\n                    <p>{cntc.phone}</p>\n                </div>\n                <div className={classes.data}>\n                    <img src={mail} alt='email icon'/>\n                    <p>{cntc.email}</p>\n                </div>\n                <div className={classes.data}>\n                    <img src={city} alt='buildings icon'/>\n                    <p>{cntc.address}</p><br/>\n                </div>\n                <div className={classes.data}>\n                    <p>{cntc.description}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.authReducer.token,\n        contacts: state.contactListReducer.contacts,\n        loading: state.contactHandlerReducer.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeContact: (contact, props) => dispatch(Actions.removeContact(contact, props))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedContact)","/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/contactForm/ContactForm.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/services/storage.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/editForm/EditForm.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/services/api.js",["104"],"import axios from \"axios\";\nconst BASE_URL = 'https://contacts-telran.herokuapp.com';\n\nconst client = axios.create({\n    baseURL:'https://contacts-telran.herokuapp.com/api/'\n})\n\nclient.interceptors.request.use(\n    function (config){\n        config.headers = {\n            Authorization: localStorage.getItem('contact_app_token'),\n            'Content-Type':'application/json',\n        }\n        return config;\n    }, function (error) {\n        return Promise.reject(error);\n    }\n)\n\nexport default class Api{\n    static registration(email, password){\n        return client.post('registration', {\n            email: email,\n            password: password\n        })\n    }\n\n    static login(email, password){\n        return client.post('login', {\n            email: email,\n            password: password\n        })\n    }\n\n    static getAllContacts(token){\n        return client.get('contact');\n    }\n\n    static addContact(token, contact) {\n        return client.post('contact', {\n            address: contact.address,\n            description: contact.description,\n            email: contact.email,\n            lastName: contact.lastName,\n            name: contact.name,\n            phone: contact.phone\n        })\n    }\n\n    static removeContact(token, id){\n        return client.delete(`contact/${id}`, {\n            headers: {\n                Authorization: token\n            }\n        })\n    }\n\n    static removeAllContacts(token){\n        return client.delete(`clear`, {\n            headers: {\n                Authorization: token\n            }\n        })\n    }\n\n    static editContact(token, contact){\n        return client.put('contact', {\n            address: contact.address,\n            description: contact.description,\n            email: contact.email,\n            lastName: contact.lastName,\n            name: contact.name,\n            phone: contact.phone,\n            id: contact.id\n        })\n    }\n}\n\n// function parseJSON(response) {\n//     return new Promise(resolve => {\n//         response.json()\n//             .then(json => resolve({\n//                 status: response.status,\n//                 ok: response.ok,\n//                 json\n//             }));\n//     });\n// }\n//\n// function request(url, options) {\n//     return new Promise((resolve, reject) => {\n//         fetch(url, options)\n//             .then(parseJSON)\n//             .then(response => {\n//                 if (response.ok) {\n//                     return resolve(response.json);\n//                 }\n//                 return reject(response.json);\n//             }).catch(error => {\n//             reject({\n//                 message: error.message\n//             });\n//         });\n//     });\n// }",["105","106"],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/authorization/Authorization.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/main/Main.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/rootReducer.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/headerReducer.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/types.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/actions.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/authReducer.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/components/loader/Loader.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/contactListReducer.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/context/AppContextProvider.js",["107","108"],"import {Context} from \"./AppContext\";\nimport React from 'react';\nimport Store from '../../services/storage';\nimport {withRouter} from 'react-router-dom';\nimport classes from \"../../components/contactForm/ContactForm.module.css\";\nimport swal from 'sweetalert';\n\nimport Api from \"../../services/api\";\n\nclass AppContextProvider extends React.Component{\n    state = {\n        isLoading: true,\n        contacts: [],\n        token: null\n    }\n\n    componentDidMount() {\n        const token = Store.getToken();\n        if(token){\n            Api.getAllContacts(token)\n                .then(response => {\n                    this.setState({\n                        contacts: response.data.contacts,\n                        isLoading: false,\n                        token\n                });\n            }).catch(error => {\n                console.log(error)\n                this.setState({\n                    isLoading: false,\n                    token\n                })\n            })\n        }else{\n            this.setState({isLoading:false})\n        }\n\n    }\n\n    findById = (id) => this.state.contacts.find(contact => contact.id === id);\n\n    // addContact = (contact) => {\n    //     this.setState({isLoading: true});\n    //     Api.addContact(`${this.state.token}`, contact).then(() => {\n    //         Api.getAllContacts(this.state.token)\n    //             .then(response => {\n    //                 this.setState({\n    //                     contacts: response.data.contacts,\n    //                     isLoading: false,\n    //                 })\n    //             });\n    //         swal(`Contact ${contact.name} ${contact.lastName} successfully added`)\n    //         this.props.history.push('/list');\n    //     }).catch((error) => {\n    //         this.setState({isLoading: false});\n    //     })\n    // }\n\n    // removeContact = (id) => {\n    //     this.setState({isLoading: true});\n    //     Api.removeContact(`${this.state.token}`, id).then(() => {\n    //         const index = this.state.contacts.findIndex(contact => contact.id === id);\n    //         swal(`Contact ${this.state.contacts[index].name} ${this.state.contacts[index].lastName} successfully removed`)\n    //         Api.getAllContacts(this.state.token)\n    //             .then(response => {\n    //                 this.setState({\n    //                     contacts: response.data.contacts,\n    //                     isLoading: false\n    //                 })\n    //             });\n    //         this.props.history.push('/list');\n    //     }).catch((error) => {\n    //         this.setState({isLoading: false});\n    //     })\n    // }\n\n    // removeAllContacts = () => {\n    //     swal('Your Contacts have been removed!');\n    //     Api.removeAllContacts(this.state.token).then(() => {\n    //         Api.getAllContacts(this.state.token)\n    //             .then(response => {\n    //                 this.setState({\n    //                     contacts: response.data.contacts,\n    //                     isLoading: false\n    //                 })\n    //             });\n    //         this.props.history.push('/list');\n    //     })\n    // }\n\n    // editContact = (contact) => {\n    //     this.setState({isLoading: true});\n    //     Api.editContact(`${this.state.token}`, contact).then(() => {\n    //         Api.getAllContacts(this.state.token)\n    //             .then(response => {\n    //                 this.setState({\n    //                     contacts: response.data.contacts,\n    //                     isLoading: false\n    //                 })\n    //             });\n    //         swal(`Contact ${contact.name} ${contact.lastName} successfully edited`)\n    //         this.props.history.push('/list');\n    //     }).catch((error) => {\n    //         this.setState({isLoading: false});\n    //     })\n    // }\n\n    // login = (email, password) => {\n    //     Api.login(`${email}`, `${password}`)\n    //         .then(response => {\n    //             let token = response.data.token;\n    //             localStorage.setItem(`contact_app_token`, token);\n    //             this.setState({token: token})\n    //             Api.getAllContacts(token)\n    //                 .then(response => {\n    //                     this.setState({\n    //                         contacts: response.data.contacts,\n    //                         isLoading: false,\n    //                         token\n    //                     })\n    //                 });\n    //             this.props.history.push('/list');\n    //         })\n    //         .catch(error => {\n    //             swal(error.message)\n    //         })\n    // }\n\n    // register = (email, password) => {\n    //     Api.registration(`${email}`, `${password}`)\n    //         .then(response => {\n    //             let token = response.data.token;\n    //             this.setState({token: token})\n    //             localStorage.setItem(`contact_app_token`, token);\n    //             this.props.history.push('/list');\n    //         })\n    //         .catch(error => {\n    //             swal(error.message)\n    //         })\n    // }\n\n    // logout = (event) => {\n    //     event.preventDefault();\n    //     swal(`You've logged out. Will miss you :(`);\n    //     Store.clearToken()\n    //     this.setState({token: ''});\n    //     this.props.history.push('/');\n    // }\n\n    render(){\n        return (\n            <div className='container'>\n                <Context.Provider value={{\n                    findById: this.findById,\n                    addContact: this.addContact,\n                    editContact: this.editContact,\n                    removeContact: this.removeContact,\n                    login: this.login,\n                    register: this.register,\n                    removeAllContacts: this.removeAllContacts,\n                    logout: this.logout,\n                    contacts: this.state.contacts,\n                    token: this.state.token\n                }}>\n                    {this.props.children}\n                    {/*{this.state.isLoading ? <div className={classes.bgr}><div className={classes[\"lds-circle\"]}><div></div></div></div> : null}*/}\n                </Context.Provider>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AppContextProvider);\n",["109","110"],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/context/withAppContext.js",[],["111","112"],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/old/context/AppContext.js",[],"/Users/konstantinaron/Desktop/Tel Ran/React/contact_book/src/redux/contactHandlerReducer.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":2,"column":7,"nodeType":"119","messageId":"120","endLine":2,"endColumn":15},{"ruleId":"113","replacedBy":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"117","severity":1,"message":"124","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":12},{"ruleId":"113","replacedBy":"126"},{"ruleId":"115","replacedBy":"127"},{"ruleId":"113","replacedBy":"128"},{"ruleId":"115","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'BASE_URL' is assigned a value but never used.",["130"],["131"],"'classes' is defined but never used.","'swal' is defined but never used.",["130"],["131"],["130"],["131"],"no-global-assign","no-unsafe-negation"]